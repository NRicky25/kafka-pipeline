/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/9.1.0/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    application
    java
}

group = "com.stream"
version = "0.1.0"

java {
    toolchain{
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Kafka client
    implementation("org.apache.kafka:kafka-clients:3.7.1")

    //JSON
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.1")

    //Postgres JDBC + HikariCP (lightweight pool)
    implementation("org.postgresql:postgresql:42.7.3")
    implementation("com.zaxxer:HikariCP:5.1.0")

    // Logging
    implementation("org.slf4j:slf4j-simple:2.0.13")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.10.2")
}


application {
    // Define the main class for the application.
    mainClass.set("com.stream.pipeline.ProducerApp")
}

tasks.test {
    useJUnitPlatform()
}

tasks.register<JavaExec>("runProducer") {
    group = "app"
    description = "Run Kafka producer"
    classpath = sourceSets["main"].runtimeClasspath
    mainClass.set("com.stream.pipeline.ProducerApp")
}

tasks.register<JavaExec>("runConsumer") {
    group = "app"
    description = "Run Kafka consumer"
    classpath = sourceSets["main"].runtimeClasspath
    mainClass.set("com.stream.pipeline.ConsumerApp")
}

tasks.register<JavaExec>("runDbPing") {
    group = "app"
    description = "Test direct JDBC connection without Hikari"
    classpath = sourceSets["main"].runtimeClasspath
    mainClass.set("com.stream.pipeline.tools.DbPing")
}